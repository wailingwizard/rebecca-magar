class ContactForm { constructor(e) { let t = { container: document.querySelector(".contact-form"), php_file_url: "contact.php", current_pagination_page: 1 }; this.options = Object.assign(t, e), this.uploadElements = {}, this.container.querySelectorAll(".form-upload").forEach(e => { let t = document.createElement("input"); t.type = "file", t.multiple = !0, t.name = e.dataset.name, t.accept = e.dataset.accept, t.style.display = "none", this.uploadElements[e.dataset.name] = t, this.container.append(t) }), this._eventHandlers() } get phpFileUrl() { return this.options.php_file_url } set phpFileUrl(e) { this.options.php_file_url = e } get container() { return this.options.container } set container(e) { this.options.container = e } validateForm(e = null) { let t = !1; return (e ? [e] : this.container.querySelectorAll("input, select, textarea")).forEach(e => { 0 == e.checkValidity() ? (e.parentElement.parentElement.querySelector(".validation-error") || e.parentElement.insertAdjacentHTML("afterend", `<p class="validation-error">${e.title}</p>`), e.parentElement.classList.add("error"), e.focus(), t = !0) : (e.parentElement.parentElement.querySelector(".validation-error") && e.parentElement.parentElement.querySelector(".validation-error").remove(), e.parentElement.classList.remove("error")) }), t } _eventHandlers() { this.container.querySelectorAll("input, textarea, select").forEach(e => { e.addEventListener("focus", () => { e.parentElement.querySelectorAll("i").forEach(e => e.classList.add("active")) }), e.addEventListener("blur", () => { e.parentElement.querySelectorAll("i").forEach(e => e.classList.remove("active")) }), e.addEventListener("change", () => { this.validateForm(e) }) }), this.container.addEventListener("submit", e => { if (e.preventDefault(), !this.validateForm()) { let e = this.container.querySelector("[type='submit']").offsetWidth, t = this.container.querySelector("[type='submit']").innerHTML; this.container.querySelector("[type='submit']").innerHTML = "<i class='fas fa-spinner fa-spin'></i>", this.container.querySelector("[type='submit']").disabled = !0, this.container.querySelector("[type='submit']").style.width = e + "px"; let r = new FormData(this.container); fetch(this.phpFileUrl, { method: "POST", body: r }).then(e => e.text()).then(e => { if ((e = JSON.parse(e)).errors) { let r = []; Object.entries(e.errors).forEach(e => { const [t, n] = e; this.container.querySelector("[name='" + t + "']") && (this.container.querySelector("[name='" + t + "']").parentElement.insertAdjacentHTML("afterend", `<p class="validation-error">${n}</p>`), this.container.querySelector("[name='" + t + "']").parentElement.classList.add("error")), r.push("* " + n + "<br>") }), this.container.querySelector(".errors") && (this.container.querySelector(".errors").innerHTML = r.toString()), this.container.querySelector("[type='submit']").disabled = !1, this.container.querySelector("[type='submit']").innerHTML = t } e.success && (this.container.innerHTML = `<div class="success">${e.success}</div>`) }) } }), this.container.querySelectorAll(".clear-form").forEach(e => e.addEventListener("click", e => { e.preventDefault(), this.container.reset(), this.container.querySelectorAll(".file").forEach(e => e.remove()), this.uploadElements = {} })) } }